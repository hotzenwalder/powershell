##################################################################################################
# 									Variables to fill
##################################################################################################

#***********************************************************
# HTML Report part
#***********************************************************

# Choose what to display in the HTML user report: True or False
$Show_Large_Folder_From_Users = $True
$Show_Large_Folders_From_C = $True
$Show_Large_Files_From_C = $True
$Show_OneDrive_Redirection = $True
$Show_OneDrive_Size = $True
$Show_Keep_OnDevice_Alert = $True

# Choose the way to add your logo to the user report
$Use_a_logo = $True # True or False
# If $Use_a_logo = True
$Report_Logo_Mode = "Base64" # Base64 or Download
# If Download mode
$Report_Logo_Path = ""
# If Base64 mode
$Report_Logo_Picture_Base64 = "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"

#***********************************************************
# HTML Report part
#***********************************************************


#***********************************************************
# Toast notif part
#***********************************************************

# Choose the way to add a picture in the toast: two ways base64 and download from web like blob storage
$Toast_Picture_Mode = "Base64" # Base64 or Download
# If Download mode
$Toast_Logo_Path = ""
# If Base64 mode
# To convert a picture like png to base64 use the below code and copy value in variable $Picture_Base64:
# $PNG_Path = <Path of your png>
# [System.Convert]::ToBase64String([System.IO.File]::ReadAllBytes("$PNG_Path")); 
$Picture_Base64 = ""

# Toast text abd buttons info
$Use_Good_Pratices_Btn = $False # Choose to display the "See good practices" button
# If $Use_Good_Pratices_Btn = True, add the link of the good pratices link, on the web
$Good_Pratices_Link = ""
$Toast_Title = "Je hebt minder dan 10% vrije ruimte op je harde schijf"
$Toast_Message = "Dit kan problemen geven met de werking van je systeem en applicaties."
$Toast_Button1_Text = "Tips" # Text to display in the first button, if $Use_Good_Pratices_Btn = True
$Toast_Button2_Text = "Meer informatie" # Text to display in the second button
$Toast_Button1_Explanation_Text = "Click on «$Toast_Button1_Text» tips om ruimte te besparen op je schijf."
$Toast_Button2_Explanation_Text = "Click «$Toast_Button2_Text» bekijk welke mappen en bestanden de meeste ruimte innemen op de schijf."
$Toast_Attribution = "FNV"

#***********************************************************
# Toast notif part
#***********************************************************


##################################################################################################
# 									Variables to fill
##################################################################################################

Function Format_Size
	{
		param(
		$size	
		)	
		If($size -eq $null){$FormatedSize = "0"}
		ElseIf( $size -lt 1KB ){$FormatedSize = "$("{0:N2}" -f $size) B"}
		ElseIf( $size -lt 1MB ){$FormatedSize = "$("{0:N2}" -f ($size / 1KB)) KB"}
		ElseIf( $size -lt 1GB ){$FormatedSize = "$("{0:N2}" -f ($size / 1MB)) MB"}
		ElseIf( $size -lt 1TB ){$FormatedSize = "$("{0:N2}" -f ($size / 1GB)) GB"}
		ElseIf( $size -lt 1PB ){$FormatedSize = "$("{0:N2}" -f ($size / 1TB)) TB"}
		return $FormatedSize
	}

add-type -type  @"
	using System;
	using System.Runtime.InteropServices;
	using System.ComponentModel;
	using System.IO;

	namespace Disk
	{
		public class Size
		{				
			[DllImport("kernel32.dll")]
			static extern uint GetCompressedFileSizeW([In, MarshalAs(UnmanagedType.LPWStr)] string lpFileName,
			out uint lpFileSizeHigh);
						
			public static ulong SizeOnDisk(string filename)
			{
			  uint High_Order;
			  uint Low_Order;
			  ulong GetSize;

			  FileInfo CurrentFile = new FileInfo(filename);
			  Low_Order = GetCompressedFileSizeW(CurrentFile.FullName, out High_Order);
			  int GetError = Marshal.GetLastWin32Error();

			 if (High_Order == 0 && Low_Order == 0xFFFFFFFF && GetError != 0)
				{
					throw new Win32Exception(GetError);
				}
			 else 
				{ 
					GetSize = ((ulong)High_Order << 32) + Low_Order;
					return GetSize;
				}
			}
		}
	}
"@

Function OD_SizeOnDisk
	{
		param(
		$Folder_to_check	
		)	

		$Get_All_Files = Get-ChildItem $Folder_to_check -recurse -ea silentlycontinue | Where-Object {! $_.PSIsContainer}
		If($Get_All_Files.Count -gt 0)
			{
				$OD_Files_Array = @()
				ForEach($File in $Get_All_Files)  
					{
						If((test-path $File.FullName))
							{
								$SizeOnDisk = [Disk.Size]::SizeOnDisk($File.FullName) 	
								If($Files_Size)
									{
										$OD_Obj = New-Object PSObject
										Add-Member -InputObject $OD_Obj -MemberType NoteProperty -Name "File name" -Value $File.Name
										Add-Member -InputObject $OD_Obj -MemberType NoteProperty -Name "Path" -Value $File.DirectoryName	
										Add-Member -InputObject $OD_Obj -MemberType NoteProperty -Name "Size" -Value $File.Length
										Add-Member -InputObject $OD_Obj -MemberType NoteProperty -Name "Size on Disk" -Value $SizeOnDisk
										$OD_Files_Array += $OD_Obj					
									}
								
								$total_SizeOnSisk +=  $SizeOnDisk
								$total_size +=  $File.Length
								
								$Log_Analytics_TotalSize = ([System.Math]::Round(($total_size) / 1MB, 2))						
								$Log_Analytics_SizeOnSisk = ([System.Math]::Round(($total_SizeOnSisk) / 1MB, 2))
								
								$Return_Array = $total_size, $total_SizeOnSisk, $Log_Analytics_TotalSize, $Log_Analytics_SizeOnSisk
							}
					}
				return $Return_Array				
			}	
		Else
			{
				return 0
			}
	}
	

# Get Hard disk size info
$Win32_LogicalDisk = Get-ciminstance Win32_LogicalDisk | where {$_.DeviceID -eq "C:"}
$Disk_Full_Size = $Win32_LogicalDisk.size
$Disk_Free_Space = $Win32_LogicalDisk.Freespace
$Total_size_NoFormat = [Math]::Round(($Disk_Full_Size))
$Free_size_formated = Format_Size -size $Disk_Free_Space
$Total_size_formated = Format_Size -size $Disk_Full_Size
[int]$Free_Space_percent = '{0:N0}' -f (($Disk_Free_Space / $Total_size_NoFormat * 100),1)
$Disk_Size_Status = @(
       [pscustomobject]@{"Total size"=$Total_size_formated;"Free space"=$Free_size_formated}
   )


# Get OneDrive full size and size on disk
$OD_Path = (Get-ItemProperty "HKCU:\SOFTWARE\Microsoft\OneDrive\Accounts\Business1").UserFolder
$Documents_Path = [System.Environment]::GetFolderPath("MyDocuments")
$Desktop_Path = [System.Environment]::GetFolderPath("Desktop")
$Pictures_Path = [System.Environment]::GetFolderPath("MyPictures")

If($Show_OneDrive_Redirection -eq $True)
	{
		$Redirection_Status = @(
			   [pscustomobject]@{Folder='Documents';Location=$Documents_Path}
			   [pscustomobject]@{Folder='Desktop'; Location=$Desktop_Path}
			   [pscustomobject]@{Folder='Pictures'; Location=$Pictures_Path}
		   )		   		
	}

If($Show_Keep_OnDevice_Alert -eq $True)
	{
		$Get_OD_Attribute = (Get-Item $OD_Path).Attributes
		If(($Get_OD_Attribute -eq 525360) -or ($Get_OD_Attribute -like "525*"))
			{
				$Always_Keep_device = "Oui"
			}
		Else
			{
				$Always_Keep_device = "Non"
			}
	}


# Get larger folders from C:\Users
If($Show_Large_Folder_From_Users -eq $True)
	{
		$MostWanted_Folders_Users = @()
		$Get_Users_Directories = Get-ChildItem "C:\users" -Directory -Recurse
		ForEach($Directory in $Get_Users_Directories)
			{
				$Dir_FullName = $Directory.FullName
				$Directory_Size_OnDisk = (OD_SizeOnDisk -Folder_to_check $Dir_FullName)[1]	
				$Directory_Formated_Size = Format_Size -size $Directory_Size_OnDisk		
				If($Directory_Size_OnDisk -gt 0)
					{
						$Obj = New-Object PSObject
						Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Location" -Value $Dir_FullName	
						Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Size" -Value $Directory_Formated_Size
						Add-Member -InputObject $Obj -MemberType NoteProperty -Name "FullSize" -Value $Directory_Size_OnDisk				
						$MostWanted_Folders_Users += $Obj				
					}		
			}
		$Top_10_Folders_Users = $MostWanted_Folders_Users | Sort-Object -Property FullSize -Descending | Select-Object Location, Size -First 20
	}


# Get larger folders from C:
If($Show_Large_Folders_From_C -eq $True)
	{		
		$MostWanted_Folders_C = @()
		$Get_C_Directories = Get-ChildItem "C:\" | Where-Object{(($_.PSIsContainer) -and ($_.name -ne "Users"))}
		foreach ($Directory in $Get_C_Directories)
			{
				$Dir_Name = $Directory.FullName
				$Folder_Size = (Get-ChildItem $Dir_Name -Recurse -Force | Measure-Object -Property Length -Sum).Sum 2> $null						
				If($Folder_Size -gt 0)
					{
						$Formated_Size = Format_Size -size $Folder_Size									
						$Obj = New-Object PSObject
						Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Location" -Value $Dir_Name	
						Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Size" -Value $Formated_Size
						$MostWanted_Folders_C += $Obj		
					}
			}			
		$Top_10_Folders_C = $MostWanted_Folders_C | Sort-Object -Property FullSize -Descending | Select-Object Location, Size -First 10	
	}


# Get larger files in C:
If($Show_Large_Files_From_C -eq $True)
	{		
		$Get_Large_Files = gci c:\ -recurse  -ea silentlycontinue | sort -descending -property length | select -first 20 name, length, fullname
		$Big_Files = @()
		ForEach($File in $Get_Large_Files)
			{
				$File_Name = $File.name	
				$Full_Path = $File.fullname			
				$Formated_Size = Format_Size -size $File.length
				
				$Obj = New-Object PSObject
				Add-Member -InputObject $Obj -MemberType NoteProperty -Name "File" -Value $File_Name	
				Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Full path" -Value $Full_Path			
				Add-Member -InputObject $Obj -MemberType NoteProperty -Name "Size" -Value $Formated_Size
				$Big_Files += $Obj				
			}	
	}

# Get onedrive size and size on disk
If($Show_OneDrive_Size -eq $True)
	{		
		$OD_Main_Size = (OD_SizeOnDisk -Folder_to_check $OD_Path)
		$OD_FullSize = $OD_Main_Size[0]
		$OD_SizeDisk = $OD_Main_Size[1]	
		$Formated_OD_FullSize = Format_Size -size $OD_FullSize
		$Formated_OD_SizeOnDisk = Format_Size -size $OD_SizeDisk
		$ODUsedSpaceOnDisk = [Math]::round((($OD_FullSize/$Total_size_NoFormat) * 100),2)

		$OD_Documents_Size = (OD_SizeOnDisk -Folder_to_check $Documents_Path)
		$OD_Documents_FullSize = $OD_Documents_Size[0]	
		$Formated_Documents_Size = Format_Size -size $OD_Documents_FullSize		
		$Get_OD_Documents_SizeOnDisk = $OD_Documents_Size[1]
		$Formated_Documents_SizeOnDisk = Format_Size -size $Get_OD_Documents_SizeOnDisk		

		$OD_Desktop_Size = (OD_SizeOnDisk -Folder_to_check $Desktop_Path)	
		$OD_Desktop_FullSize = $OD_Desktop_Size[0]		
		$Formated_Desktop_Size = Format_Size -size $OD_Desktop_FullSize
		$Get_OD_Desktop_SizeOnDisk = $OD_Desktop_Size[1]
		$Formated_Desktop_SizeOnDisk = Format_Size -size $Get_OD_Desktop_SizeOnDisk

		$OD_Pictures_Size = (OD_SizeOnDisk -Folder_to_check $Pictures_Path)
		$OD_Pictures_FullSize = $OD_Pictures_Size[0]		
		$Formated_Pictures_Size = Format_Size -size $OD_Pictures_FullSize
		$Get_OD_Pictures_SizeOnDisk = $OD_Pictures_Size[1]
		$Formated_Pictures_SizeOnDisk = Format_Size -size $Get_OD_Pictures_SizeOnDisk		

		$OneDrive_Size_Status = @(
			   [pscustomobject]@{Dossier='OneDrive root';"Total size"=$Formated_OD_FullSize;"Size on disk"=$Formated_OD_SizeOnDisk}
			   [pscustomobject]@{Dossier='Documents';"Total size"=$Formated_Documents_Size;"Size on disk"=$Formated_Documents_SizeOnDisk}
			   [pscustomobject]@{Dossier='Desktop';"Total size"=$Formated_Desktop_Size;"Size on disk"=$Formated_Desktop_SizeOnDisk}
			   [pscustomobject]@{Dossier='Pictures';"Total size"=$Formated_Pictures_Size;"Size on disk"=$Formated_Pictures_SizeOnDisk}	   
		   )	
	}



#**************************************************************************************************************************
# 													HTML USER REPORT PART
#**************************************************************************************************************************

$Temp = $env:temp
$ProgData = $env:PROGRAMDATA
$ComputerName = gc env:computername
$Date = get-date
$HTML_DiskSize_Report = "$Temp\DiskSize_Report.html"

$CSS_Content = @'
body
{
	font-family: Arial;
	font-size: 8pt;
}

table
{
	border: 0px solid #e3e3e3;
	border-collapse: collapse;
}

tr:nth-child(even) 
{
	background: #f5f5f5;	
}

tr:nth-child(odd) 
{
	background: #f1f1f1;	
}

th, td 
{
	padding: 7px;
}

tr:hover
{
	background:#A1E5DC;
}

tr
{
	-webkit-transition: color 1s ease;
	-ms-transition: color 1s ease;
	-moz-transition: color 1s ease;
	-o-transition: color 1s ease;	
 }
 
th
{
	padding: 3px;
	background: #00a984;
	color: white;
	font-size: 13px;
	text-align:center;
	border: 1px solid #e3e3e3;		
}

td
{
	border: 1px solid #e3e3e3;
	padding: 5px;
	font-size: 11px;
	text-align:left;
}

.rowOne
{
	background: #f5f5f5;	
}
.rowTwo
{
	background: #f1f1f1
}

.titre_list
{
	color: #2d89ef;
	font-weight:bold;
	font-size:16pt;
	font-family: Segoe UI light, Arial;
}

.Alert_OneDrive_Yes
{
	color: red;
	font-weight:bold;
	font-size:10pt;
	font-family: Segoe UI light, Arial;
}

.subtitle
{
	font-family: Segoe UI Light, Arial;
	font-weight:bold;	
	font-size: 11pt;
	color:#009999;
}

.titre_categorie
{
	font-family: Segoe UI Light, Arial;
	font-weight:bold;	
	font-size: 13pt;
	color:#007fbd;
}
'@

$CSS_File  = "$env:temp\HTML_Export_CSS.css"
$CSS_Content | out-file "$env:temp\HTML_Export_CSS.css"  -Encoding "UTF8"

If($Use_a_logo -eq $True)
	{
		$User_Report_Logo_Path = "$env:temp\Report_logo.png"
		If($Report_Logo_Mode -eq "Base64")
			{
				[byte[]]$Bytes = [convert]::FromBase64String($Report_Logo_Picture_Base64)
				[System.IO.File]::WriteAllBytes($User_Report_Logo_Path,$Bytes)		
			}
		ElseIf($Report_Logo_Mode -eq "Download")
			{
				Invoke-WebRequest -Uri $Report_Logo_Path -OutFile $User_Report_Logo_Path 		
			}	

		If($Use_a_logo -eq $True)
			{
				$Picture = "<p style='text-align:center;'><img src=$User_Report_Logo_Path width='150'></p>"	
			}	
	}

$Title = "<p style='text-align:center;'><span class=titre_list>Larger content on your disk</span><br><span class=subtitle>Last update: $Date</span></p>"
$Disk_Size_resume = "<p><span class=titre_categorie>Disk space usage (Free space percent: $Free_Space_percent %)</span></p>"

If($Show_Keep_OnDevice_Alert -eq $True)
	{
		$Always_Keep_device = "oui"
		If($Always_Keep_device -eq "Oui")
			{
				$OneDrive_Always_Keep_device_Title = "<p><span class=Alert_OneDrive_Yes>Be careful, option Always keep on device is selected at OneDrive root. This may have an impact on your disk size.</span></p>"		
			}
	}
		
If($Show_Large_Folder_From_Users -eq $True)
	{
		$Title_Users_Folders = "<p><span class=titre_categorie>List of the 20 larger folders in C:\Users</span></p>"
		$Top10_Folders_In_User = $Top_10_Folders_Users | ConvertTo-HTML -Fragment	
	}
	
If($Show_Large_Folders_From_C -eq $True)
	{
		$Title_C_Folders = "<p><span class=titre_categorie>List on larger folders in C:\</span></p>"
		$Top10_Folders_In_C = $Top_10_Folders_C | ConvertTo-HTML -Fragment
	}	
	
If($Show_Large_Files_From_C -eq $True)
	{
		$Title_Big_Files = "<p><span class=titre_categorie>List of larger files in C:\</span></p>"
		$Top_20_Large_Files = $Big_Files | ConvertTo-HTML -Fragment
	}	
	
If($Show_OneDrive_Redirection -eq $True)
	{
		$Redirection_Status_Title = "<p><span class=titre_categorie>OneDrive folders redirection status</span></p>"
		$Known_Folder_Redirection_Status = $Redirection_Status | ConvertTo-HTML -Fragment
	}	
	
If($Show_OneDrive_Size -eq $True)
	{
		$OneDrive_Size_Title = "<p><span class=titre_categorie>OneDrive usage (OneDrive size on disk percent: $ODUsedSpaceOnDisk %)</span></p>"
		$OneDrive_Size = $OneDrive_Size_Status | ConvertTo-HTML -Fragment
	}	

$Disk_Size = $Disk_Size_Status | ConvertTo-HTML -Fragment

ConvertTo-HTML  -body "$Picture $Title<br>$Disk_Size_resume $Disk_Size<br>$Redirection_Status_Title $Known_Folder_Redirection_Status<br>$OneDrive_Size_Title $OneDrive_Always_Keep_device_Title $OneDrive_Size<br>$Title_Users_Folders $Top10_Folders_In_User<br>$Title_C_Folders $Top10_Folders_In_C<br>$Title_Big_Files $Top_20_Large_Files" -CSSUri $CSS_File | Out-File -encoding ASCII $HTML_DiskSize_Report		


#**************************************************************************************************************************
# 													HTML USER REPORT PART
#**************************************************************************************************************************









#**************************************************************************************************************************
# 													TOAST NOTIF PART
#**************************************************************************************************************************

$HeroImage = "$env:TEMP\HeroPicture.png"
If($Toast_Picture_Mode -eq "Base64")
	{
		[byte[]]$Bytes = [convert]::FromBase64String($Picture_Base64)
		[System.IO.File]::WriteAllBytes($HeroImage,$Bytes)		
	}
ElseIf($Toast_Picture_Mode -eq "Download")
	{
		Invoke-WebRequest -Uri $Toast_Logo_Path -OutFile $HeroImage 		
	}

$Title = $Toast_Title
$Message = $Toast_Message
$Button1_Text = $Toast_Button1_Text
$Button2_Text = $Toast_Button2_Text
$Button1_Explanation_Text = $Toast_Button1_Explanation_Text
$Button2_Explanation_Text = $Toast_Button2_Explanation_Text
$Attribution = $Toast_Attribution
$Scenario = 'reminder' 

If($Use_Good_Pratices_Btn -eq $True)
	{
[xml]$Toast = @"
<toast scenario="$Scenario">
    <visual>
    <binding template="ToastGeneric">
        <image placement="hero" src="$HeroImage"/>
        <text placement="attribution">$Attribution</text>
        <text>$Title</text>
        <group>
            <subgroup>     
                <text hint-style="body" hint-wrap="true" >$Message</text>
				<text hint-style="body" hint-wrap="true" >$Conseil</text>
				<text hint-style="body" hint-wrap="true" >$Button1_Explanation_Text</text>
				<text hint-style="body" hint-wrap="true" >$Button2_Explanation_Text</text>						
            </subgroup>
        </group>
		
		<group>				
			<subgroup>     
							
			</subgroup>				
		</group>		
		
		
    </binding>
    </visual>
  <actions>
        <action arguments="$Good_Pratices_Link" content="$Button1_Text" activationType="protocol" />
        <action arguments="$env:temp\DiskSize_Report.html" content="$Button2_Text" activationType="protocol" />		
   </actions>	
</toast>
"@		
	}
Else
	{

[xml]$Toast = @"
<toast scenario="$Scenario">
    <visual>
    <binding template="ToastGeneric">
        <image placement="hero" src="$HeroImage"/>
        <text placement="attribution">$Attribution</text>
        <text>$Title</text>
        <group>
            <subgroup>     
                <text hint-style="body" hint-wrap="true" >$Message</text>
				<text hint-style="body" hint-wrap="true" >$Conseil</text>
				<text hint-style="body" hint-wrap="true" >$Button2_Explanation_Text</text>					
            </subgroup>
        </group>
		
		<group>				
			<subgroup>     
								
			</subgroup>				
		</group>		
		
		
    </binding>
    </visual>
  <actions>
        <action arguments="$env:temp\DiskSize_Report.html" content="$Button2_Text" activationType="protocol" />		
   </actions>	
</toast>
"@	
	}


# Set the AppID
$AppID = "Microsoft.CompanyPortal_8wekyb3d8bbwe!App"

# Notification area
# This part allows you to let the notification in the notification area
$Notifications_Reg = 'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings'
If(!(Test-Path -Path "$Notifications_Reg\$AppID")) 
	{
		New-Item -Path "$Notifications_Reg\$AppID" -Force
		New-ItemProperty -Path "$Notifications_Reg\$AppID" -Name 'ShowInActionCenter' -Value 1 -PropertyType 'DWORD'
	}

If((Get-ItemProperty -Path "$Notifications_Reg\$AppID" -Name 'ShowInActionCenter' -ErrorAction SilentlyContinue).ShowInActionCenter -ne '1') 
	{
		New-ItemProperty -Path "$Notifications_Reg\$AppID" -Name 'ShowInActionCenter' -Value 1 -PropertyType 'DWORD' -Force
	}


# Toast creation and display
$Load = [Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime]
$Load = [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime]
$ToastXml = New-Object -TypeName Windows.Data.Xml.Dom.XmlDocument
$ToastXml.LoadXml($Toast.OuterXml)	
# Display the Toast
[Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier($AppID).Show($ToastXml)

#**************************************************************************************************************************
# 													TOAST NOTIF PART
#**************************************************************************************************************************